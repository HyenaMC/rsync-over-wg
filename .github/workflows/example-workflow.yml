name: "Example: Deploy over WireGuard"

on:
  workflow_dispatch:
    inputs:
      target:
        description: 'Remote target path'
        required: true
        default: '/tmp/rsync-over-wg-demo/'
        type: string
      source:
        description: 'Local source path'
        required: false
        default: './'
        type: string
      rsync_delete:
        description: 'Also delete files on remote not present locally (--delete)'
        required: false
        default: false
        type: boolean
      rsync_dry_run:
        description: 'Dry run (no changes)'
        required: false
        default: true
        type: boolean
      verbose:
        description: 'Verbose logs from rsync'
        required: false
        default: true
        type: boolean
      pre_script:
        description: 'Remote pre-sync script'
        required: false
        default: 'echo pre-sync on $(hostname)'
        type: string
      post_script:
        description: 'Remote post-sync script'
        required: false
        default: 'echo post-sync on $(hostname)'
        type: string
      auto_install_rsync_on_target:
        description: "Auto-install rsync on remote if missing"
        required: false
        default: true
        type: boolean

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use local action to deploy
        uses: ./
        with:
          # WireGuard config content (keep in a secret)
          wg_config_file: ${{ secrets.WG_CONFIG_FILE }}

          # Remote host reachable over WireGuard (keep in a secret)
          remote_host: ${{ secrets.WG_REMOTE_HOST }}

          # SSH credentials (keep in secrets)
          ssh_username: ${{ secrets.WG_REMOTE_USER }}
          ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}
          ssh_port: ${{ secrets.WG_REMOTE_PORT }}

          # Rsync settings
          source: ${{ inputs.source }}
          target: ${{ inputs.target }}
          rsync_args: -az
          rsync_args_more: "${{ inputs.rsync_delete == 'true' && '--delete' || '' }} ${{ inputs.rsync_dry_run == 'true' && '--dry-run' || '' }}"
          verbose: ${{ inputs.verbose }}

          # Optional remote hooks
          pre_script: ${{ inputs.pre_script }}
          post_script: ${{ inputs.post_script }}
          auto_install_rsync_on_target: ${{ inputs.auto_install_rsync_on_target }}

      - name: Done
        run: echo "Workflow completed. Review logs above for rsync output."