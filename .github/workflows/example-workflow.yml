name: Example WireGuard Sync Workflow

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to sync'
        required: true
        default: 'main'
        type: string
      target_path:
        description: 'Target path on server'
        required: true
        default: '/var/www/html/'
        type: string
      sync_mode:
        description: 'Sync mode'
        required: true
        default: 'clean_copy'
        type: choice
        options:
          - overwrite
          - clean_copy
      exclude_patterns:
        description: 'Additional patterns to exclude'
        required: false
        default: 'logs/,temp/'
        type: string
      protect_patterns:
        description: 'Patterns to protect from deletion'
        required: false
        default: 'uploads/,config/custom.ini'
        type: string
      dry_run:
        description: 'Dry run mode'
        required: false
        default: false
        type: boolean

  push:
    branches: [main]

  pull_request:
    types: [closed]
    branches: [main]

jobs:
  deploy:
    if: github.event.pull_request.merged == true || github.event_name == 'workflow_dispatch' || github.event_name == 'push'
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Sync files via WireGuard
        id: sync
        uses: ./  # Use the action in the same repository
        with:
          # WireGuard parameters
          wireguard_private_key: ${{ secrets.WIREGUARD_PRIVATE_KEY }}
          wireguard_local_ip: 10.8.0.7/24
          wireguard_peer_ip: 192.168.2.124
          wireguard_peer_public_key: ${{ secrets.WIREGUARD_PEER_PUBLIC_KEY }}
          wireguard_peer_endpoint: ${{ secrets.WIREGUARD_PEER_ENDPOINT }}
          
          # SSH parameters
          ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}
          ssh_user: kpajun
          ssh_port: 22
          
          # Sync parameters
          source_path: ./
          target_path: ${{ github.event.inputs.target_path || '/var/www/html/' }}
          sync_mode: ${{ github.event.inputs.sync_mode || 'clean_copy' }}
          exclude_patterns: ${{ github.event.inputs.exclude_patterns }}
          protect_patterns: ${{ github.event.inputs.protect_patterns }}
          
          # Git parameters
          ref: ${{ github.event.inputs.branch || github.sha }}
          
          # Debug parameters
          # dry_run: ${{ github.event.inputs.dry_run || false }}
          dry_run: true
          debug: true
          
      - name: Display sync results
        run: |
          echo "Sync status: ${{ steps.sync.outputs.sync_status }}"
          echo "Files transferred: ${{ steps.sync.outputs.sync_files_count }}"
          echo "Bytes transferred: ${{ steps.sync.outputs.sync_bytes_transferred }}"
          
      - name: Notify on success
        if: steps.sync.outputs.sync_status == 'success'
        run: |
          echo "‚úÖ Sync completed successfully!"
          echo "üìÅ Files transferred: ${{ steps.sync.outputs.sync_files_count }}"
          echo "üìä Bytes transferred: ${{ steps.sync.outputs.sync_bytes_transferred }}"
          
      - name: Notify on failure
        if: steps.sync.outputs.sync_status == 'failure'
        run: |
          echo "‚ùå Sync failed!"
          echo "Please check the logs above for details."
          exit 1