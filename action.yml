name: 'Rsync over WireGuard'
description: 'Connect to WireGuard and deploy files via rsync with optional pre/post SSH commands'
author: 'kpAjun @HyenaMC'
branding:
  icon: 'upload-cloud'
  color: 'blue'

inputs:
  # WireGuard: provide full wg config content
  wg_config_file:
    description: 'WireGuard configuration file content (ini text as in wg-quick)'
    required: true

  # Remote host reachable over WireGuard
  remote_host:
    description: 'Remote host or IP to connect to over WireGuard'
    required: true

  # SSH authentication for remote host
  ssh_username:
    description: 'SSH username for remote host'
    required: true
  ssh_private_key:
    description: 'SSH private key (PEM/OpenSSH text)'
    required: true
  ssh_port:
    description: 'SSH port on remote host'
    required: false
    default: '22'

  # Rsync parameters
  source:
    description: 'Local source path (relative to repo)'
    required: false
    default: './'
  target:
    description: 'Remote target path'
    required: true
  rsync_args:
    description: 'Base rsync arguments'
    required: false
    default: '-az'
  rsync_args_more:
    description: 'Additional rsync arguments appended to rsync_args'
    required: false
    default: ''
  verbose:
    description: 'Enable verbose logs from rsync action'
    required: false
    default: 'false'

  # Rsync filter
  rsync_filter_path:
    description: 'Path to an rsync filter file in the repository; defaults to built-in action/rsync-filter'
    required: false
    default: ''

  # Optional remote hooks
  pre_script:
    description: 'Remote shell script to run before rsync'
    required: false
    default: ''
  post_script:
    description: 'Remote shell script to run after rsync'
    required: false
    default: ''

runs:
  using: 'composite'
  steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up WireGuard (wg-quick)
      uses: niklaskeerl/easy-wireguard-action@v2
      with:
        WG_CONFIG_FILE: ${{ inputs.wg_config_file }}

    - name: Verify WireGuard link
      shell: bash
      run: |
        set -e
        sudo wg show || true
        ping -c 3 ${{ inputs.remote_host }} || true

    - name: Prepare rsync filter
      shell: bash
      run: |
        set -e
        # Determine filter source
        if [ -n "${{ inputs.rsync_filter_path }}" ] && [ -f "${{ inputs.rsync_filter_path }}" ]; then
          echo "Using custom rsync filter: ${{ inputs.rsync_filter_path }}"
          cp "${{ inputs.rsync_filter_path }}" .rsync-filter
        else
          echo "Using built-in default filter: action/rsync-filters"
          cp "${{ github.action_path }}/action/rsync-filters" .rsync-filter
        fi
        echo "Final .rsync-filter contents:" && cat .rsync-filter

    - name: Pre-sync remote commands
      if: ${{ inputs.pre_script != '' }}
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ inputs.remote_host }}
        username: ${{ inputs.ssh_username }}
        key: ${{ inputs.ssh_private_key }}
        port: ${{ inputs.ssh_port }}
        script: |
          set -e
          ${{ inputs.pre_script }}

    - name: Rsync deploy
      uses: up9cloud/action-rsync@master
      env:
        HOST: ${{ inputs.remote_host }}
        USER: ${{ inputs.ssh_username }}
        KEY: ${{ inputs.ssh_private_key }}
        PORT: ${{ inputs.ssh_port }}
        SOURCE: ${{ inputs.source }}
        TARGET: ${{ inputs.target }}
        VERBOSE: ${{ inputs.verbose }}
        ARGS: ${{ inputs.rsync_args }}
        ARGS_MORE: "--filter='merge .rsync-filter' ${{ inputs.rsync_args_more }}"

    - name: Post-sync remote commands
      if: ${{ inputs.post_script != '' }}
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ inputs.remote_host }}
        username: ${{ inputs.ssh_username }}
        key: ${{ inputs.ssh_private_key }}
        port: ${{ inputs.ssh_port }}
        script: |
          set -e
          ${{ inputs.post_script }}